package com.yoga.entity;

import java.util.ArrayList;
import java.util.List;

public class FlowtypeExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table flowtype
     *
     * @mbg.generated Tue Jun 09 19:11:09 GMT+08:00 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table flowtype
     *
     * @mbg.generated Tue Jun 09 19:11:09 GMT+08:00 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table flowtype
     *
     * @mbg.generated Tue Jun 09 19:11:09 GMT+08:00 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flowtype
     *
     * @mbg.generated Tue Jun 09 19:11:09 GMT+08:00 2020
     */
    public FlowtypeExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flowtype
     *
     * @mbg.generated Tue Jun 09 19:11:09 GMT+08:00 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flowtype
     *
     * @mbg.generated Tue Jun 09 19:11:09 GMT+08:00 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flowtype
     *
     * @mbg.generated Tue Jun 09 19:11:09 GMT+08:00 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flowtype
     *
     * @mbg.generated Tue Jun 09 19:11:09 GMT+08:00 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flowtype
     *
     * @mbg.generated Tue Jun 09 19:11:09 GMT+08:00 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flowtype
     *
     * @mbg.generated Tue Jun 09 19:11:09 GMT+08:00 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flowtype
     *
     * @mbg.generated Tue Jun 09 19:11:09 GMT+08:00 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flowtype
     *
     * @mbg.generated Tue Jun 09 19:11:09 GMT+08:00 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flowtype
     *
     * @mbg.generated Tue Jun 09 19:11:09 GMT+08:00 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flowtype
     *
     * @mbg.generated Tue Jun 09 19:11:09 GMT+08:00 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table flowtype
     *
     * @mbg.generated Tue Jun 09 19:11:09 GMT+08:00 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andFlowtypeidIsNull() {
            addCriterion("flowtypeid is null");
            return (Criteria) this;
        }

        public Criteria andFlowtypeidIsNotNull() {
            addCriterion("flowtypeid is not null");
            return (Criteria) this;
        }

        public Criteria andFlowtypeidEqualTo(Integer value) {
            addCriterion("flowtypeid =", value, "flowtypeid");
            return (Criteria) this;
        }

        public Criteria andFlowtypeidNotEqualTo(Integer value) {
            addCriterion("flowtypeid <>", value, "flowtypeid");
            return (Criteria) this;
        }

        public Criteria andFlowtypeidGreaterThan(Integer value) {
            addCriterion("flowtypeid >", value, "flowtypeid");
            return (Criteria) this;
        }

        public Criteria andFlowtypeidGreaterThanOrEqualTo(Integer value) {
            addCriterion("flowtypeid >=", value, "flowtypeid");
            return (Criteria) this;
        }

        public Criteria andFlowtypeidLessThan(Integer value) {
            addCriterion("flowtypeid <", value, "flowtypeid");
            return (Criteria) this;
        }

        public Criteria andFlowtypeidLessThanOrEqualTo(Integer value) {
            addCriterion("flowtypeid <=", value, "flowtypeid");
            return (Criteria) this;
        }

        public Criteria andFlowtypeidIn(List<Integer> values) {
            addCriterion("flowtypeid in", values, "flowtypeid");
            return (Criteria) this;
        }

        public Criteria andFlowtypeidNotIn(List<Integer> values) {
            addCriterion("flowtypeid not in", values, "flowtypeid");
            return (Criteria) this;
        }

        public Criteria andFlowtypeidBetween(Integer value1, Integer value2) {
            addCriterion("flowtypeid between", value1, value2, "flowtypeid");
            return (Criteria) this;
        }

        public Criteria andFlowtypeidNotBetween(Integer value1, Integer value2) {
            addCriterion("flowtypeid not between", value1, value2, "flowtypeid");
            return (Criteria) this;
        }

        public Criteria andUidIsNull() {
            addCriterion("uid is null");
            return (Criteria) this;
        }

        public Criteria andUidIsNotNull() {
            addCriterion("uid is not null");
            return (Criteria) this;
        }

        public Criteria andUidEqualTo(Integer value) {
            addCriterion("uid =", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidNotEqualTo(Integer value) {
            addCriterion("uid <>", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidGreaterThan(Integer value) {
            addCriterion("uid >", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidGreaterThanOrEqualTo(Integer value) {
            addCriterion("uid >=", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidLessThan(Integer value) {
            addCriterion("uid <", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidLessThanOrEqualTo(Integer value) {
            addCriterion("uid <=", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidIn(List<Integer> values) {
            addCriterion("uid in", values, "uid");
            return (Criteria) this;
        }

        public Criteria andUidNotIn(List<Integer> values) {
            addCriterion("uid not in", values, "uid");
            return (Criteria) this;
        }

        public Criteria andUidBetween(Integer value1, Integer value2) {
            addCriterion("uid between", value1, value2, "uid");
            return (Criteria) this;
        }

        public Criteria andUidNotBetween(Integer value1, Integer value2) {
            addCriterion("uid not between", value1, value2, "uid");
            return (Criteria) this;
        }

        public Criteria andFlowtypenameIsNull() {
            addCriterion("flowtypename is null");
            return (Criteria) this;
        }

        public Criteria andFlowtypenameIsNotNull() {
            addCriterion("flowtypename is not null");
            return (Criteria) this;
        }

        public Criteria andFlowtypenameEqualTo(String value) {
            addCriterion("flowtypename =", value, "flowtypename");
            return (Criteria) this;
        }

        public Criteria andFlowtypenameNotEqualTo(String value) {
            addCriterion("flowtypename <>", value, "flowtypename");
            return (Criteria) this;
        }

        public Criteria andFlowtypenameGreaterThan(String value) {
            addCriterion("flowtypename >", value, "flowtypename");
            return (Criteria) this;
        }

        public Criteria andFlowtypenameGreaterThanOrEqualTo(String value) {
            addCriterion("flowtypename >=", value, "flowtypename");
            return (Criteria) this;
        }

        public Criteria andFlowtypenameLessThan(String value) {
            addCriterion("flowtypename <", value, "flowtypename");
            return (Criteria) this;
        }

        public Criteria andFlowtypenameLessThanOrEqualTo(String value) {
            addCriterion("flowtypename <=", value, "flowtypename");
            return (Criteria) this;
        }

        public Criteria andFlowtypenameLike(String value) {
            addCriterion("flowtypename like", value, "flowtypename");
            return (Criteria) this;
        }

        public Criteria andFlowtypenameNotLike(String value) {
            addCriterion("flowtypename not like", value, "flowtypename");
            return (Criteria) this;
        }

        public Criteria andFlowtypenameIn(List<String> values) {
            addCriterion("flowtypename in", values, "flowtypename");
            return (Criteria) this;
        }

        public Criteria andFlowtypenameNotIn(List<String> values) {
            addCriterion("flowtypename not in", values, "flowtypename");
            return (Criteria) this;
        }

        public Criteria andFlowtypenameBetween(String value1, String value2) {
            addCriterion("flowtypename between", value1, value2, "flowtypename");
            return (Criteria) this;
        }

        public Criteria andFlowtypenameNotBetween(String value1, String value2) {
            addCriterion("flowtypename not between", value1, value2, "flowtypename");
            return (Criteria) this;
        }

        public Criteria andInfoIsNull() {
            addCriterion("info is null");
            return (Criteria) this;
        }

        public Criteria andInfoIsNotNull() {
            addCriterion("info is not null");
            return (Criteria) this;
        }

        public Criteria andInfoEqualTo(String value) {
            addCriterion("info =", value, "info");
            return (Criteria) this;
        }

        public Criteria andInfoNotEqualTo(String value) {
            addCriterion("info <>", value, "info");
            return (Criteria) this;
        }

        public Criteria andInfoGreaterThan(String value) {
            addCriterion("info >", value, "info");
            return (Criteria) this;
        }

        public Criteria andInfoGreaterThanOrEqualTo(String value) {
            addCriterion("info >=", value, "info");
            return (Criteria) this;
        }

        public Criteria andInfoLessThan(String value) {
            addCriterion("info <", value, "info");
            return (Criteria) this;
        }

        public Criteria andInfoLessThanOrEqualTo(String value) {
            addCriterion("info <=", value, "info");
            return (Criteria) this;
        }

        public Criteria andInfoLike(String value) {
            addCriterion("info like", value, "info");
            return (Criteria) this;
        }

        public Criteria andInfoNotLike(String value) {
            addCriterion("info not like", value, "info");
            return (Criteria) this;
        }

        public Criteria andInfoIn(List<String> values) {
            addCriterion("info in", values, "info");
            return (Criteria) this;
        }

        public Criteria andInfoNotIn(List<String> values) {
            addCriterion("info not in", values, "info");
            return (Criteria) this;
        }

        public Criteria andInfoBetween(String value1, String value2) {
            addCriterion("info between", value1, value2, "info");
            return (Criteria) this;
        }

        public Criteria andInfoNotBetween(String value1, String value2) {
            addCriterion("info not between", value1, value2, "info");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table flowtype
     *
     * @mbg.generated do_not_delete_during_merge Tue Jun 09 19:11:09 GMT+08:00 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table flowtype
     *
     * @mbg.generated Tue Jun 09 19:11:09 GMT+08:00 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}