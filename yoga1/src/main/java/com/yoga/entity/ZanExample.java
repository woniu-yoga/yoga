package com.yoga.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class ZanExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table zan
     *
     * @mbg.generated Tue Jun 09 19:11:09 GMT+08:00 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table zan
     *
     * @mbg.generated Tue Jun 09 19:11:09 GMT+08:00 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table zan
     *
     * @mbg.generated Tue Jun 09 19:11:09 GMT+08:00 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zan
     *
     * @mbg.generated Tue Jun 09 19:11:09 GMT+08:00 2020
     */
    public ZanExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zan
     *
     * @mbg.generated Tue Jun 09 19:11:09 GMT+08:00 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zan
     *
     * @mbg.generated Tue Jun 09 19:11:09 GMT+08:00 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zan
     *
     * @mbg.generated Tue Jun 09 19:11:09 GMT+08:00 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zan
     *
     * @mbg.generated Tue Jun 09 19:11:09 GMT+08:00 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zan
     *
     * @mbg.generated Tue Jun 09 19:11:09 GMT+08:00 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zan
     *
     * @mbg.generated Tue Jun 09 19:11:09 GMT+08:00 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zan
     *
     * @mbg.generated Tue Jun 09 19:11:09 GMT+08:00 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zan
     *
     * @mbg.generated Tue Jun 09 19:11:09 GMT+08:00 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zan
     *
     * @mbg.generated Tue Jun 09 19:11:09 GMT+08:00 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zan
     *
     * @mbg.generated Tue Jun 09 19:11:09 GMT+08:00 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table zan
     *
     * @mbg.generated Tue Jun 09 19:11:09 GMT+08:00 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andZanIdIsNull() {
            addCriterion("zan_id is null");
            return (Criteria) this;
        }

        public Criteria andZanIdIsNotNull() {
            addCriterion("zan_id is not null");
            return (Criteria) this;
        }

        public Criteria andZanIdEqualTo(Integer value) {
            addCriterion("zan_id =", value, "zanId");
            return (Criteria) this;
        }

        public Criteria andZanIdNotEqualTo(Integer value) {
            addCriterion("zan_id <>", value, "zanId");
            return (Criteria) this;
        }

        public Criteria andZanIdGreaterThan(Integer value) {
            addCriterion("zan_id >", value, "zanId");
            return (Criteria) this;
        }

        public Criteria andZanIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("zan_id >=", value, "zanId");
            return (Criteria) this;
        }

        public Criteria andZanIdLessThan(Integer value) {
            addCriterion("zan_id <", value, "zanId");
            return (Criteria) this;
        }

        public Criteria andZanIdLessThanOrEqualTo(Integer value) {
            addCriterion("zan_id <=", value, "zanId");
            return (Criteria) this;
        }

        public Criteria andZanIdIn(List<Integer> values) {
            addCriterion("zan_id in", values, "zanId");
            return (Criteria) this;
        }

        public Criteria andZanIdNotIn(List<Integer> values) {
            addCriterion("zan_id not in", values, "zanId");
            return (Criteria) this;
        }

        public Criteria andZanIdBetween(Integer value1, Integer value2) {
            addCriterion("zan_id between", value1, value2, "zanId");
            return (Criteria) this;
        }

        public Criteria andZanIdNotBetween(Integer value1, Integer value2) {
            addCriterion("zan_id not between", value1, value2, "zanId");
            return (Criteria) this;
        }

        public Criteria andCircleIdIsNull() {
            addCriterion("circle_id is null");
            return (Criteria) this;
        }

        public Criteria andCircleIdIsNotNull() {
            addCriterion("circle_id is not null");
            return (Criteria) this;
        }

        public Criteria andCircleIdEqualTo(Integer value) {
            addCriterion("circle_id =", value, "circleId");
            return (Criteria) this;
        }

        public Criteria andCircleIdNotEqualTo(Integer value) {
            addCriterion("circle_id <>", value, "circleId");
            return (Criteria) this;
        }

        public Criteria andCircleIdGreaterThan(Integer value) {
            addCriterion("circle_id >", value, "circleId");
            return (Criteria) this;
        }

        public Criteria andCircleIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("circle_id >=", value, "circleId");
            return (Criteria) this;
        }

        public Criteria andCircleIdLessThan(Integer value) {
            addCriterion("circle_id <", value, "circleId");
            return (Criteria) this;
        }

        public Criteria andCircleIdLessThanOrEqualTo(Integer value) {
            addCriterion("circle_id <=", value, "circleId");
            return (Criteria) this;
        }

        public Criteria andCircleIdIn(List<Integer> values) {
            addCriterion("circle_id in", values, "circleId");
            return (Criteria) this;
        }

        public Criteria andCircleIdNotIn(List<Integer> values) {
            addCriterion("circle_id not in", values, "circleId");
            return (Criteria) this;
        }

        public Criteria andCircleIdBetween(Integer value1, Integer value2) {
            addCriterion("circle_id between", value1, value2, "circleId");
            return (Criteria) this;
        }

        public Criteria andCircleIdNotBetween(Integer value1, Integer value2) {
            addCriterion("circle_id not between", value1, value2, "circleId");
            return (Criteria) this;
        }

        public Criteria andZanUidIsNull() {
            addCriterion("zan_uid is null");
            return (Criteria) this;
        }

        public Criteria andZanUidIsNotNull() {
            addCriterion("zan_uid is not null");
            return (Criteria) this;
        }

        public Criteria andZanUidEqualTo(Integer value) {
            addCriterion("zan_uid =", value, "zanUid");
            return (Criteria) this;
        }

        public Criteria andZanUidNotEqualTo(Integer value) {
            addCriterion("zan_uid <>", value, "zanUid");
            return (Criteria) this;
        }

        public Criteria andZanUidGreaterThan(Integer value) {
            addCriterion("zan_uid >", value, "zanUid");
            return (Criteria) this;
        }

        public Criteria andZanUidGreaterThanOrEqualTo(Integer value) {
            addCriterion("zan_uid >=", value, "zanUid");
            return (Criteria) this;
        }

        public Criteria andZanUidLessThan(Integer value) {
            addCriterion("zan_uid <", value, "zanUid");
            return (Criteria) this;
        }

        public Criteria andZanUidLessThanOrEqualTo(Integer value) {
            addCriterion("zan_uid <=", value, "zanUid");
            return (Criteria) this;
        }

        public Criteria andZanUidIn(List<Integer> values) {
            addCriterion("zan_uid in", values, "zanUid");
            return (Criteria) this;
        }

        public Criteria andZanUidNotIn(List<Integer> values) {
            addCriterion("zan_uid not in", values, "zanUid");
            return (Criteria) this;
        }

        public Criteria andZanUidBetween(Integer value1, Integer value2) {
            addCriterion("zan_uid between", value1, value2, "zanUid");
            return (Criteria) this;
        }

        public Criteria andZanUidNotBetween(Integer value1, Integer value2) {
            addCriterion("zan_uid not between", value1, value2, "zanUid");
            return (Criteria) this;
        }

        public Criteria andZanTimeIsNull() {
            addCriterion("zan_time is null");
            return (Criteria) this;
        }

        public Criteria andZanTimeIsNotNull() {
            addCriterion("zan_time is not null");
            return (Criteria) this;
        }

        public Criteria andZanTimeEqualTo(Date value) {
            addCriterion("zan_time =", value, "zanTime");
            return (Criteria) this;
        }

        public Criteria andZanTimeNotEqualTo(Date value) {
            addCriterion("zan_time <>", value, "zanTime");
            return (Criteria) this;
        }

        public Criteria andZanTimeGreaterThan(Date value) {
            addCriterion("zan_time >", value, "zanTime");
            return (Criteria) this;
        }

        public Criteria andZanTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("zan_time >=", value, "zanTime");
            return (Criteria) this;
        }

        public Criteria andZanTimeLessThan(Date value) {
            addCriterion("zan_time <", value, "zanTime");
            return (Criteria) this;
        }

        public Criteria andZanTimeLessThanOrEqualTo(Date value) {
            addCriterion("zan_time <=", value, "zanTime");
            return (Criteria) this;
        }

        public Criteria andZanTimeIn(List<Date> values) {
            addCriterion("zan_time in", values, "zanTime");
            return (Criteria) this;
        }

        public Criteria andZanTimeNotIn(List<Date> values) {
            addCriterion("zan_time not in", values, "zanTime");
            return (Criteria) this;
        }

        public Criteria andZanTimeBetween(Date value1, Date value2) {
            addCriterion("zan_time between", value1, value2, "zanTime");
            return (Criteria) this;
        }

        public Criteria andZanTimeNotBetween(Date value1, Date value2) {
            addCriterion("zan_time not between", value1, value2, "zanTime");
            return (Criteria) this;
        }

        public Criteria andBak1IsNull() {
            addCriterion("bak1 is null");
            return (Criteria) this;
        }

        public Criteria andBak1IsNotNull() {
            addCriterion("bak1 is not null");
            return (Criteria) this;
        }

        public Criteria andBak1EqualTo(Integer value) {
            addCriterion("bak1 =", value, "bak1");
            return (Criteria) this;
        }

        public Criteria andBak1NotEqualTo(Integer value) {
            addCriterion("bak1 <>", value, "bak1");
            return (Criteria) this;
        }

        public Criteria andBak1GreaterThan(Integer value) {
            addCriterion("bak1 >", value, "bak1");
            return (Criteria) this;
        }

        public Criteria andBak1GreaterThanOrEqualTo(Integer value) {
            addCriterion("bak1 >=", value, "bak1");
            return (Criteria) this;
        }

        public Criteria andBak1LessThan(Integer value) {
            addCriterion("bak1 <", value, "bak1");
            return (Criteria) this;
        }

        public Criteria andBak1LessThanOrEqualTo(Integer value) {
            addCriterion("bak1 <=", value, "bak1");
            return (Criteria) this;
        }

        public Criteria andBak1In(List<Integer> values) {
            addCriterion("bak1 in", values, "bak1");
            return (Criteria) this;
        }

        public Criteria andBak1NotIn(List<Integer> values) {
            addCriterion("bak1 not in", values, "bak1");
            return (Criteria) this;
        }

        public Criteria andBak1Between(Integer value1, Integer value2) {
            addCriterion("bak1 between", value1, value2, "bak1");
            return (Criteria) this;
        }

        public Criteria andBak1NotBetween(Integer value1, Integer value2) {
            addCriterion("bak1 not between", value1, value2, "bak1");
            return (Criteria) this;
        }

        public Criteria andBak2IsNull() {
            addCriterion("bak2 is null");
            return (Criteria) this;
        }

        public Criteria andBak2IsNotNull() {
            addCriterion("bak2 is not null");
            return (Criteria) this;
        }

        public Criteria andBak2EqualTo(String value) {
            addCriterion("bak2 =", value, "bak2");
            return (Criteria) this;
        }

        public Criteria andBak2NotEqualTo(String value) {
            addCriterion("bak2 <>", value, "bak2");
            return (Criteria) this;
        }

        public Criteria andBak2GreaterThan(String value) {
            addCriterion("bak2 >", value, "bak2");
            return (Criteria) this;
        }

        public Criteria andBak2GreaterThanOrEqualTo(String value) {
            addCriterion("bak2 >=", value, "bak2");
            return (Criteria) this;
        }

        public Criteria andBak2LessThan(String value) {
            addCriterion("bak2 <", value, "bak2");
            return (Criteria) this;
        }

        public Criteria andBak2LessThanOrEqualTo(String value) {
            addCriterion("bak2 <=", value, "bak2");
            return (Criteria) this;
        }

        public Criteria andBak2Like(String value) {
            addCriterion("bak2 like", value, "bak2");
            return (Criteria) this;
        }

        public Criteria andBak2NotLike(String value) {
            addCriterion("bak2 not like", value, "bak2");
            return (Criteria) this;
        }

        public Criteria andBak2In(List<String> values) {
            addCriterion("bak2 in", values, "bak2");
            return (Criteria) this;
        }

        public Criteria andBak2NotIn(List<String> values) {
            addCriterion("bak2 not in", values, "bak2");
            return (Criteria) this;
        }

        public Criteria andBak2Between(String value1, String value2) {
            addCriterion("bak2 between", value1, value2, "bak2");
            return (Criteria) this;
        }

        public Criteria andBak2NotBetween(String value1, String value2) {
            addCriterion("bak2 not between", value1, value2, "bak2");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table zan
     *
     * @mbg.generated do_not_delete_during_merge Tue Jun 09 19:11:09 GMT+08:00 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table zan
     *
     * @mbg.generated Tue Jun 09 19:11:09 GMT+08:00 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}