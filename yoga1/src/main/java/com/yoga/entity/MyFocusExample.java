package com.yoga.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class MyFocusExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table my_focus
     *
     * @mbg.generated Tue Jun 09 19:11:09 GMT+08:00 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table my_focus
     *
     * @mbg.generated Tue Jun 09 19:11:09 GMT+08:00 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table my_focus
     *
     * @mbg.generated Tue Jun 09 19:11:09 GMT+08:00 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table my_focus
     *
     * @mbg.generated Tue Jun 09 19:11:09 GMT+08:00 2020
     */
    public MyFocusExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table my_focus
     *
     * @mbg.generated Tue Jun 09 19:11:09 GMT+08:00 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table my_focus
     *
     * @mbg.generated Tue Jun 09 19:11:09 GMT+08:00 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table my_focus
     *
     * @mbg.generated Tue Jun 09 19:11:09 GMT+08:00 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table my_focus
     *
     * @mbg.generated Tue Jun 09 19:11:09 GMT+08:00 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table my_focus
     *
     * @mbg.generated Tue Jun 09 19:11:09 GMT+08:00 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table my_focus
     *
     * @mbg.generated Tue Jun 09 19:11:09 GMT+08:00 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table my_focus
     *
     * @mbg.generated Tue Jun 09 19:11:09 GMT+08:00 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table my_focus
     *
     * @mbg.generated Tue Jun 09 19:11:09 GMT+08:00 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table my_focus
     *
     * @mbg.generated Tue Jun 09 19:11:09 GMT+08:00 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table my_focus
     *
     * @mbg.generated Tue Jun 09 19:11:09 GMT+08:00 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table my_focus
     *
     * @mbg.generated Tue Jun 09 19:11:09 GMT+08:00 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andFocusUidIsNull() {
            addCriterion("focus_uid is null");
            return (Criteria) this;
        }

        public Criteria andFocusUidIsNotNull() {
            addCriterion("focus_uid is not null");
            return (Criteria) this;
        }

        public Criteria andFocusUidEqualTo(Integer value) {
            addCriterion("focus_uid =", value, "focusUid");
            return (Criteria) this;
        }

        public Criteria andFocusUidNotEqualTo(Integer value) {
            addCriterion("focus_uid <>", value, "focusUid");
            return (Criteria) this;
        }

        public Criteria andFocusUidGreaterThan(Integer value) {
            addCriterion("focus_uid >", value, "focusUid");
            return (Criteria) this;
        }

        public Criteria andFocusUidGreaterThanOrEqualTo(Integer value) {
            addCriterion("focus_uid >=", value, "focusUid");
            return (Criteria) this;
        }

        public Criteria andFocusUidLessThan(Integer value) {
            addCriterion("focus_uid <", value, "focusUid");
            return (Criteria) this;
        }

        public Criteria andFocusUidLessThanOrEqualTo(Integer value) {
            addCriterion("focus_uid <=", value, "focusUid");
            return (Criteria) this;
        }

        public Criteria andFocusUidIn(List<Integer> values) {
            addCriterion("focus_uid in", values, "focusUid");
            return (Criteria) this;
        }

        public Criteria andFocusUidNotIn(List<Integer> values) {
            addCriterion("focus_uid not in", values, "focusUid");
            return (Criteria) this;
        }

        public Criteria andFocusUidBetween(Integer value1, Integer value2) {
            addCriterion("focus_uid between", value1, value2, "focusUid");
            return (Criteria) this;
        }

        public Criteria andFocusUidNotBetween(Integer value1, Integer value2) {
            addCriterion("focus_uid not between", value1, value2, "focusUid");
            return (Criteria) this;
        }

        public Criteria andFocusedUidIsNull() {
            addCriterion("focused_uid is null");
            return (Criteria) this;
        }

        public Criteria andFocusedUidIsNotNull() {
            addCriterion("focused_uid is not null");
            return (Criteria) this;
        }

        public Criteria andFocusedUidEqualTo(Integer value) {
            addCriterion("focused_uid =", value, "focusedUid");
            return (Criteria) this;
        }

        public Criteria andFocusedUidNotEqualTo(Integer value) {
            addCriterion("focused_uid <>", value, "focusedUid");
            return (Criteria) this;
        }

        public Criteria andFocusedUidGreaterThan(Integer value) {
            addCriterion("focused_uid >", value, "focusedUid");
            return (Criteria) this;
        }

        public Criteria andFocusedUidGreaterThanOrEqualTo(Integer value) {
            addCriterion("focused_uid >=", value, "focusedUid");
            return (Criteria) this;
        }

        public Criteria andFocusedUidLessThan(Integer value) {
            addCriterion("focused_uid <", value, "focusedUid");
            return (Criteria) this;
        }

        public Criteria andFocusedUidLessThanOrEqualTo(Integer value) {
            addCriterion("focused_uid <=", value, "focusedUid");
            return (Criteria) this;
        }

        public Criteria andFocusedUidIn(List<Integer> values) {
            addCriterion("focused_uid in", values, "focusedUid");
            return (Criteria) this;
        }

        public Criteria andFocusedUidNotIn(List<Integer> values) {
            addCriterion("focused_uid not in", values, "focusedUid");
            return (Criteria) this;
        }

        public Criteria andFocusedUidBetween(Integer value1, Integer value2) {
            addCriterion("focused_uid between", value1, value2, "focusedUid");
            return (Criteria) this;
        }

        public Criteria andFocusedUidNotBetween(Integer value1, Integer value2) {
            addCriterion("focused_uid not between", value1, value2, "focusedUid");
            return (Criteria) this;
        }

        public Criteria andFocusTimeIsNull() {
            addCriterion("focus_time is null");
            return (Criteria) this;
        }

        public Criteria andFocusTimeIsNotNull() {
            addCriterion("focus_time is not null");
            return (Criteria) this;
        }

        public Criteria andFocusTimeEqualTo(Date value) {
            addCriterion("focus_time =", value, "focusTime");
            return (Criteria) this;
        }

        public Criteria andFocusTimeNotEqualTo(Date value) {
            addCriterion("focus_time <>", value, "focusTime");
            return (Criteria) this;
        }

        public Criteria andFocusTimeGreaterThan(Date value) {
            addCriterion("focus_time >", value, "focusTime");
            return (Criteria) this;
        }

        public Criteria andFocusTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("focus_time >=", value, "focusTime");
            return (Criteria) this;
        }

        public Criteria andFocusTimeLessThan(Date value) {
            addCriterion("focus_time <", value, "focusTime");
            return (Criteria) this;
        }

        public Criteria andFocusTimeLessThanOrEqualTo(Date value) {
            addCriterion("focus_time <=", value, "focusTime");
            return (Criteria) this;
        }

        public Criteria andFocusTimeIn(List<Date> values) {
            addCriterion("focus_time in", values, "focusTime");
            return (Criteria) this;
        }

        public Criteria andFocusTimeNotIn(List<Date> values) {
            addCriterion("focus_time not in", values, "focusTime");
            return (Criteria) this;
        }

        public Criteria andFocusTimeBetween(Date value1, Date value2) {
            addCriterion("focus_time between", value1, value2, "focusTime");
            return (Criteria) this;
        }

        public Criteria andFocusTimeNotBetween(Date value1, Date value2) {
            addCriterion("focus_time not between", value1, value2, "focusTime");
            return (Criteria) this;
        }

        public Criteria andBak1IsNull() {
            addCriterion("bak1 is null");
            return (Criteria) this;
        }

        public Criteria andBak1IsNotNull() {
            addCriterion("bak1 is not null");
            return (Criteria) this;
        }

        public Criteria andBak1EqualTo(String value) {
            addCriterion("bak1 =", value, "bak1");
            return (Criteria) this;
        }

        public Criteria andBak1NotEqualTo(String value) {
            addCriterion("bak1 <>", value, "bak1");
            return (Criteria) this;
        }

        public Criteria andBak1GreaterThan(String value) {
            addCriterion("bak1 >", value, "bak1");
            return (Criteria) this;
        }

        public Criteria andBak1GreaterThanOrEqualTo(String value) {
            addCriterion("bak1 >=", value, "bak1");
            return (Criteria) this;
        }

        public Criteria andBak1LessThan(String value) {
            addCriterion("bak1 <", value, "bak1");
            return (Criteria) this;
        }

        public Criteria andBak1LessThanOrEqualTo(String value) {
            addCriterion("bak1 <=", value, "bak1");
            return (Criteria) this;
        }

        public Criteria andBak1Like(String value) {
            addCriterion("bak1 like", value, "bak1");
            return (Criteria) this;
        }

        public Criteria andBak1NotLike(String value) {
            addCriterion("bak1 not like", value, "bak1");
            return (Criteria) this;
        }

        public Criteria andBak1In(List<String> values) {
            addCriterion("bak1 in", values, "bak1");
            return (Criteria) this;
        }

        public Criteria andBak1NotIn(List<String> values) {
            addCriterion("bak1 not in", values, "bak1");
            return (Criteria) this;
        }

        public Criteria andBak1Between(String value1, String value2) {
            addCriterion("bak1 between", value1, value2, "bak1");
            return (Criteria) this;
        }

        public Criteria andBak1NotBetween(String value1, String value2) {
            addCriterion("bak1 not between", value1, value2, "bak1");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table my_focus
     *
     * @mbg.generated do_not_delete_during_merge Tue Jun 09 19:11:09 GMT+08:00 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table my_focus
     *
     * @mbg.generated Tue Jun 09 19:11:09 GMT+08:00 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}