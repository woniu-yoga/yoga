package com.yoga.entity;

import java.util.ArrayList;
import java.util.List;

public class CoachExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table coach
     *
     * @mbg.generated Tue Jun 09 20:15:58 GMT+08:00 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table coach
     *
     * @mbg.generated Tue Jun 09 20:15:58 GMT+08:00 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table coach
     *
     * @mbg.generated Tue Jun 09 20:15:58 GMT+08:00 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coach
     *
     * @mbg.generated Tue Jun 09 20:15:58 GMT+08:00 2020
     */
    public CoachExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coach
     *
     * @mbg.generated Tue Jun 09 20:15:58 GMT+08:00 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coach
     *
     * @mbg.generated Tue Jun 09 20:15:58 GMT+08:00 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coach
     *
     * @mbg.generated Tue Jun 09 20:15:58 GMT+08:00 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coach
     *
     * @mbg.generated Tue Jun 09 20:15:58 GMT+08:00 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coach
     *
     * @mbg.generated Tue Jun 09 20:15:58 GMT+08:00 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coach
     *
     * @mbg.generated Tue Jun 09 20:15:58 GMT+08:00 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coach
     *
     * @mbg.generated Tue Jun 09 20:15:58 GMT+08:00 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coach
     *
     * @mbg.generated Tue Jun 09 20:15:58 GMT+08:00 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coach
     *
     * @mbg.generated Tue Jun 09 20:15:58 GMT+08:00 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coach
     *
     * @mbg.generated Tue Jun 09 20:15:58 GMT+08:00 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table coach
     *
     * @mbg.generated Tue Jun 09 20:15:58 GMT+08:00 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andUidIsNull() {
            addCriterion("uid is null");
            return (Criteria) this;
        }

        public Criteria andUidIsNotNull() {
            addCriterion("uid is not null");
            return (Criteria) this;
        }

        public Criteria andUidEqualTo(Integer value) {
            addCriterion("uid =", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidNotEqualTo(Integer value) {
            addCriterion("uid <>", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidGreaterThan(Integer value) {
            addCriterion("uid >", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidGreaterThanOrEqualTo(Integer value) {
            addCriterion("uid >=", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidLessThan(Integer value) {
            addCriterion("uid <", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidLessThanOrEqualTo(Integer value) {
            addCriterion("uid <=", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidIn(List<Integer> values) {
            addCriterion("uid in", values, "uid");
            return (Criteria) this;
        }

        public Criteria andUidNotIn(List<Integer> values) {
            addCriterion("uid not in", values, "uid");
            return (Criteria) this;
        }

        public Criteria andUidBetween(Integer value1, Integer value2) {
            addCriterion("uid between", value1, value2, "uid");
            return (Criteria) this;
        }

        public Criteria andUidNotBetween(Integer value1, Integer value2) {
            addCriterion("uid not between", value1, value2, "uid");
            return (Criteria) this;
        }

        public Criteria andIsreceiveIsNull() {
            addCriterion("isreceive is null");
            return (Criteria) this;
        }

        public Criteria andIsreceiveIsNotNull() {
            addCriterion("isreceive is not null");
            return (Criteria) this;
        }

        public Criteria andIsreceiveEqualTo(Boolean value) {
            addCriterion("isreceive =", value, "isreceive");
            return (Criteria) this;
        }

        public Criteria andIsreceiveNotEqualTo(Boolean value) {
            addCriterion("isreceive <>", value, "isreceive");
            return (Criteria) this;
        }

        public Criteria andIsreceiveGreaterThan(Boolean value) {
            addCriterion("isreceive >", value, "isreceive");
            return (Criteria) this;
        }

        public Criteria andIsreceiveGreaterThanOrEqualTo(Boolean value) {
            addCriterion("isreceive >=", value, "isreceive");
            return (Criteria) this;
        }

        public Criteria andIsreceiveLessThan(Boolean value) {
            addCriterion("isreceive <", value, "isreceive");
            return (Criteria) this;
        }

        public Criteria andIsreceiveLessThanOrEqualTo(Boolean value) {
            addCriterion("isreceive <=", value, "isreceive");
            return (Criteria) this;
        }

        public Criteria andIsreceiveIn(List<Boolean> values) {
            addCriterion("isreceive in", values, "isreceive");
            return (Criteria) this;
        }

        public Criteria andIsreceiveNotIn(List<Boolean> values) {
            addCriterion("isreceive not in", values, "isreceive");
            return (Criteria) this;
        }

        public Criteria andIsreceiveBetween(Boolean value1, Boolean value2) {
            addCriterion("isreceive between", value1, value2, "isreceive");
            return (Criteria) this;
        }

        public Criteria andIsreceiveNotBetween(Boolean value1, Boolean value2) {
            addCriterion("isreceive not between", value1, value2, "isreceive");
            return (Criteria) this;
        }

        public Criteria andClassfeiIsNull() {
            addCriterion("classfei is null");
            return (Criteria) this;
        }

        public Criteria andClassfeiIsNotNull() {
            addCriterion("classfei is not null");
            return (Criteria) this;
        }

        public Criteria andClassfeiEqualTo(Integer value) {
            addCriterion("classfei =", value, "classfei");
            return (Criteria) this;
        }

        public Criteria andClassfeiNotEqualTo(Integer value) {
            addCriterion("classfei <>", value, "classfei");
            return (Criteria) this;
        }

        public Criteria andClassfeiGreaterThan(Integer value) {
            addCriterion("classfei >", value, "classfei");
            return (Criteria) this;
        }

        public Criteria andClassfeiGreaterThanOrEqualTo(Integer value) {
            addCriterion("classfei >=", value, "classfei");
            return (Criteria) this;
        }

        public Criteria andClassfeiLessThan(Integer value) {
            addCriterion("classfei <", value, "classfei");
            return (Criteria) this;
        }

        public Criteria andClassfeiLessThanOrEqualTo(Integer value) {
            addCriterion("classfei <=", value, "classfei");
            return (Criteria) this;
        }

        public Criteria andClassfeiIn(List<Integer> values) {
            addCriterion("classfei in", values, "classfei");
            return (Criteria) this;
        }

        public Criteria andClassfeiNotIn(List<Integer> values) {
            addCriterion("classfei not in", values, "classfei");
            return (Criteria) this;
        }

        public Criteria andClassfeiBetween(Integer value1, Integer value2) {
            addCriterion("classfei between", value1, value2, "classfei");
            return (Criteria) this;
        }

        public Criteria andClassfeiNotBetween(Integer value1, Integer value2) {
            addCriterion("classfei not between", value1, value2, "classfei");
            return (Criteria) this;
        }

        public Criteria andIsprivateIsNull() {
            addCriterion("isprivate is null");
            return (Criteria) this;
        }

        public Criteria andIsprivateIsNotNull() {
            addCriterion("isprivate is not null");
            return (Criteria) this;
        }

        public Criteria andIsprivateEqualTo(Boolean value) {
            addCriterion("isprivate =", value, "isprivate");
            return (Criteria) this;
        }

        public Criteria andIsprivateNotEqualTo(Boolean value) {
            addCriterion("isprivate <>", value, "isprivate");
            return (Criteria) this;
        }

        public Criteria andIsprivateGreaterThan(Boolean value) {
            addCriterion("isprivate >", value, "isprivate");
            return (Criteria) this;
        }

        public Criteria andIsprivateGreaterThanOrEqualTo(Boolean value) {
            addCriterion("isprivate >=", value, "isprivate");
            return (Criteria) this;
        }

        public Criteria andIsprivateLessThan(Boolean value) {
            addCriterion("isprivate <", value, "isprivate");
            return (Criteria) this;
        }

        public Criteria andIsprivateLessThanOrEqualTo(Boolean value) {
            addCriterion("isprivate <=", value, "isprivate");
            return (Criteria) this;
        }

        public Criteria andIsprivateIn(List<Boolean> values) {
            addCriterion("isprivate in", values, "isprivate");
            return (Criteria) this;
        }

        public Criteria andIsprivateNotIn(List<Boolean> values) {
            addCriterion("isprivate not in", values, "isprivate");
            return (Criteria) this;
        }

        public Criteria andIsprivateBetween(Boolean value1, Boolean value2) {
            addCriterion("isprivate between", value1, value2, "isprivate");
            return (Criteria) this;
        }

        public Criteria andIsprivateNotBetween(Boolean value1, Boolean value2) {
            addCriterion("isprivate not between", value1, value2, "isprivate");
            return (Criteria) this;
        }

        public Criteria andIsvenueIsNull() {
            addCriterion("isvenue is null");
            return (Criteria) this;
        }

        public Criteria andIsvenueIsNotNull() {
            addCriterion("isvenue is not null");
            return (Criteria) this;
        }

        public Criteria andIsvenueEqualTo(Boolean value) {
            addCriterion("isvenue =", value, "isvenue");
            return (Criteria) this;
        }

        public Criteria andIsvenueNotEqualTo(Boolean value) {
            addCriterion("isvenue <>", value, "isvenue");
            return (Criteria) this;
        }

        public Criteria andIsvenueGreaterThan(Boolean value) {
            addCriterion("isvenue >", value, "isvenue");
            return (Criteria) this;
        }

        public Criteria andIsvenueGreaterThanOrEqualTo(Boolean value) {
            addCriterion("isvenue >=", value, "isvenue");
            return (Criteria) this;
        }

        public Criteria andIsvenueLessThan(Boolean value) {
            addCriterion("isvenue <", value, "isvenue");
            return (Criteria) this;
        }

        public Criteria andIsvenueLessThanOrEqualTo(Boolean value) {
            addCriterion("isvenue <=", value, "isvenue");
            return (Criteria) this;
        }

        public Criteria andIsvenueIn(List<Boolean> values) {
            addCriterion("isvenue in", values, "isvenue");
            return (Criteria) this;
        }

        public Criteria andIsvenueNotIn(List<Boolean> values) {
            addCriterion("isvenue not in", values, "isvenue");
            return (Criteria) this;
        }

        public Criteria andIsvenueBetween(Boolean value1, Boolean value2) {
            addCriterion("isvenue between", value1, value2, "isvenue");
            return (Criteria) this;
        }

        public Criteria andIsvenueNotBetween(Boolean value1, Boolean value2) {
            addCriterion("isvenue not between", value1, value2, "isvenue");
            return (Criteria) this;
        }

        public Criteria andPositiveIsNull() {
            addCriterion("positive is null");
            return (Criteria) this;
        }

        public Criteria andPositiveIsNotNull() {
            addCriterion("positive is not null");
            return (Criteria) this;
        }

        public Criteria andPositiveEqualTo(Integer value) {
            addCriterion("positive =", value, "positive");
            return (Criteria) this;
        }

        public Criteria andPositiveNotEqualTo(Integer value) {
            addCriterion("positive <>", value, "positive");
            return (Criteria) this;
        }

        public Criteria andPositiveGreaterThan(Integer value) {
            addCriterion("positive >", value, "positive");
            return (Criteria) this;
        }

        public Criteria andPositiveGreaterThanOrEqualTo(Integer value) {
            addCriterion("positive >=", value, "positive");
            return (Criteria) this;
        }

        public Criteria andPositiveLessThan(Integer value) {
            addCriterion("positive <", value, "positive");
            return (Criteria) this;
        }

        public Criteria andPositiveLessThanOrEqualTo(Integer value) {
            addCriterion("positive <=", value, "positive");
            return (Criteria) this;
        }

        public Criteria andPositiveIn(List<Integer> values) {
            addCriterion("positive in", values, "positive");
            return (Criteria) this;
        }

        public Criteria andPositiveNotIn(List<Integer> values) {
            addCriterion("positive not in", values, "positive");
            return (Criteria) this;
        }

        public Criteria andPositiveBetween(Integer value1, Integer value2) {
            addCriterion("positive between", value1, value2, "positive");
            return (Criteria) this;
        }

        public Criteria andPositiveNotBetween(Integer value1, Integer value2) {
            addCriterion("positive not between", value1, value2, "positive");
            return (Criteria) this;
        }

        public Criteria andGradeIsNull() {
            addCriterion("grade is null");
            return (Criteria) this;
        }

        public Criteria andGradeIsNotNull() {
            addCriterion("grade is not null");
            return (Criteria) this;
        }

        public Criteria andGradeEqualTo(String value) {
            addCriterion("grade =", value, "grade");
            return (Criteria) this;
        }

        public Criteria andGradeNotEqualTo(String value) {
            addCriterion("grade <>", value, "grade");
            return (Criteria) this;
        }

        public Criteria andGradeGreaterThan(String value) {
            addCriterion("grade >", value, "grade");
            return (Criteria) this;
        }

        public Criteria andGradeGreaterThanOrEqualTo(String value) {
            addCriterion("grade >=", value, "grade");
            return (Criteria) this;
        }

        public Criteria andGradeLessThan(String value) {
            addCriterion("grade <", value, "grade");
            return (Criteria) this;
        }

        public Criteria andGradeLessThanOrEqualTo(String value) {
            addCriterion("grade <=", value, "grade");
            return (Criteria) this;
        }

        public Criteria andGradeLike(String value) {
            addCriterion("grade like", value, "grade");
            return (Criteria) this;
        }

        public Criteria andGradeNotLike(String value) {
            addCriterion("grade not like", value, "grade");
            return (Criteria) this;
        }

        public Criteria andGradeIn(List<String> values) {
            addCriterion("grade in", values, "grade");
            return (Criteria) this;
        }

        public Criteria andGradeNotIn(List<String> values) {
            addCriterion("grade not in", values, "grade");
            return (Criteria) this;
        }

        public Criteria andGradeBetween(String value1, String value2) {
            addCriterion("grade between", value1, value2, "grade");
            return (Criteria) this;
        }

        public Criteria andGradeNotBetween(String value1, String value2) {
            addCriterion("grade not between", value1, value2, "grade");
            return (Criteria) this;
        }

        public Criteria andCertificateIsNull() {
            addCriterion("certificate is null");
            return (Criteria) this;
        }

        public Criteria andCertificateIsNotNull() {
            addCriterion("certificate is not null");
            return (Criteria) this;
        }

        public Criteria andCertificateEqualTo(String value) {
            addCriterion("certificate =", value, "certificate");
            return (Criteria) this;
        }

        public Criteria andCertificateNotEqualTo(String value) {
            addCriterion("certificate <>", value, "certificate");
            return (Criteria) this;
        }

        public Criteria andCertificateGreaterThan(String value) {
            addCriterion("certificate >", value, "certificate");
            return (Criteria) this;
        }

        public Criteria andCertificateGreaterThanOrEqualTo(String value) {
            addCriterion("certificate >=", value, "certificate");
            return (Criteria) this;
        }

        public Criteria andCertificateLessThan(String value) {
            addCriterion("certificate <", value, "certificate");
            return (Criteria) this;
        }

        public Criteria andCertificateLessThanOrEqualTo(String value) {
            addCriterion("certificate <=", value, "certificate");
            return (Criteria) this;
        }

        public Criteria andCertificateLike(String value) {
            addCriterion("certificate like", value, "certificate");
            return (Criteria) this;
        }

        public Criteria andCertificateNotLike(String value) {
            addCriterion("certificate not like", value, "certificate");
            return (Criteria) this;
        }

        public Criteria andCertificateIn(List<String> values) {
            addCriterion("certificate in", values, "certificate");
            return (Criteria) this;
        }

        public Criteria andCertificateNotIn(List<String> values) {
            addCriterion("certificate not in", values, "certificate");
            return (Criteria) this;
        }

        public Criteria andCertificateBetween(String value1, String value2) {
            addCriterion("certificate between", value1, value2, "certificate");
            return (Criteria) this;
        }

        public Criteria andCertificateNotBetween(String value1, String value2) {
            addCriterion("certificate not between", value1, value2, "certificate");
            return (Criteria) this;
        }

        public Criteria andFlowtypeidIsNull() {
            addCriterion("flowtypeid is null");
            return (Criteria) this;
        }

        public Criteria andFlowtypeidIsNotNull() {
            addCriterion("flowtypeid is not null");
            return (Criteria) this;
        }

        public Criteria andFlowtypeidEqualTo(Integer value) {
            addCriterion("flowtypeid =", value, "flowtypeid");
            return (Criteria) this;
        }

        public Criteria andFlowtypeidNotEqualTo(Integer value) {
            addCriterion("flowtypeid <>", value, "flowtypeid");
            return (Criteria) this;
        }

        public Criteria andFlowtypeidGreaterThan(Integer value) {
            addCriterion("flowtypeid >", value, "flowtypeid");
            return (Criteria) this;
        }

        public Criteria andFlowtypeidGreaterThanOrEqualTo(Integer value) {
            addCriterion("flowtypeid >=", value, "flowtypeid");
            return (Criteria) this;
        }

        public Criteria andFlowtypeidLessThan(Integer value) {
            addCriterion("flowtypeid <", value, "flowtypeid");
            return (Criteria) this;
        }

        public Criteria andFlowtypeidLessThanOrEqualTo(Integer value) {
            addCriterion("flowtypeid <=", value, "flowtypeid");
            return (Criteria) this;
        }

        public Criteria andFlowtypeidIn(List<Integer> values) {
            addCriterion("flowtypeid in", values, "flowtypeid");
            return (Criteria) this;
        }

        public Criteria andFlowtypeidNotIn(List<Integer> values) {
            addCriterion("flowtypeid not in", values, "flowtypeid");
            return (Criteria) this;
        }

        public Criteria andFlowtypeidBetween(Integer value1, Integer value2) {
            addCriterion("flowtypeid between", value1, value2, "flowtypeid");
            return (Criteria) this;
        }

        public Criteria andFlowtypeidNotBetween(Integer value1, Integer value2) {
            addCriterion("flowtypeid not between", value1, value2, "flowtypeid");
            return (Criteria) this;
        }

        public Criteria andPhotoIsNull() {
            addCriterion("photo is null");
            return (Criteria) this;
        }

        public Criteria andPhotoIsNotNull() {
            addCriterion("photo is not null");
            return (Criteria) this;
        }

        public Criteria andPhotoEqualTo(String value) {
            addCriterion("photo =", value, "photo");
            return (Criteria) this;
        }

        public Criteria andPhotoNotEqualTo(String value) {
            addCriterion("photo <>", value, "photo");
            return (Criteria) this;
        }

        public Criteria andPhotoGreaterThan(String value) {
            addCriterion("photo >", value, "photo");
            return (Criteria) this;
        }

        public Criteria andPhotoGreaterThanOrEqualTo(String value) {
            addCriterion("photo >=", value, "photo");
            return (Criteria) this;
        }

        public Criteria andPhotoLessThan(String value) {
            addCriterion("photo <", value, "photo");
            return (Criteria) this;
        }

        public Criteria andPhotoLessThanOrEqualTo(String value) {
            addCriterion("photo <=", value, "photo");
            return (Criteria) this;
        }

        public Criteria andPhotoLike(String value) {
            addCriterion("photo like", value, "photo");
            return (Criteria) this;
        }

        public Criteria andPhotoNotLike(String value) {
            addCriterion("photo not like", value, "photo");
            return (Criteria) this;
        }

        public Criteria andPhotoIn(List<String> values) {
            addCriterion("photo in", values, "photo");
            return (Criteria) this;
        }

        public Criteria andPhotoNotIn(List<String> values) {
            addCriterion("photo not in", values, "photo");
            return (Criteria) this;
        }

        public Criteria andPhotoBetween(String value1, String value2) {
            addCriterion("photo between", value1, value2, "photo");
            return (Criteria) this;
        }

        public Criteria andPhotoNotBetween(String value1, String value2) {
            addCriterion("photo not between", value1, value2, "photo");
            return (Criteria) this;
        }

        public Criteria andBak1IsNull() {
            addCriterion("bak1 is null");
            return (Criteria) this;
        }

        public Criteria andBak1IsNotNull() {
            addCriterion("bak1 is not null");
            return (Criteria) this;
        }

        public Criteria andBak1EqualTo(Boolean value) {
            addCriterion("bak1 =", value, "bak1");
            return (Criteria) this;
        }

        public Criteria andBak1NotEqualTo(Boolean value) {
            addCriterion("bak1 <>", value, "bak1");
            return (Criteria) this;
        }

        public Criteria andBak1GreaterThan(Boolean value) {
            addCriterion("bak1 >", value, "bak1");
            return (Criteria) this;
        }

        public Criteria andBak1GreaterThanOrEqualTo(Boolean value) {
            addCriterion("bak1 >=", value, "bak1");
            return (Criteria) this;
        }

        public Criteria andBak1LessThan(Boolean value) {
            addCriterion("bak1 <", value, "bak1");
            return (Criteria) this;
        }

        public Criteria andBak1LessThanOrEqualTo(Boolean value) {
            addCriterion("bak1 <=", value, "bak1");
            return (Criteria) this;
        }

        public Criteria andBak1In(List<Boolean> values) {
            addCriterion("bak1 in", values, "bak1");
            return (Criteria) this;
        }

        public Criteria andBak1NotIn(List<Boolean> values) {
            addCriterion("bak1 not in", values, "bak1");
            return (Criteria) this;
        }

        public Criteria andBak1Between(Boolean value1, Boolean value2) {
            addCriterion("bak1 between", value1, value2, "bak1");
            return (Criteria) this;
        }

        public Criteria andBak1NotBetween(Boolean value1, Boolean value2) {
            addCriterion("bak1 not between", value1, value2, "bak1");
            return (Criteria) this;
        }

        public Criteria andBak2IsNull() {
            addCriterion("bak2 is null");
            return (Criteria) this;
        }

        public Criteria andBak2IsNotNull() {
            addCriterion("bak2 is not null");
            return (Criteria) this;
        }

        public Criteria andBak2EqualTo(String value) {
            addCriterion("bak2 =", value, "bak2");
            return (Criteria) this;
        }

        public Criteria andBak2NotEqualTo(String value) {
            addCriterion("bak2 <>", value, "bak2");
            return (Criteria) this;
        }

        public Criteria andBak2GreaterThan(String value) {
            addCriterion("bak2 >", value, "bak2");
            return (Criteria) this;
        }

        public Criteria andBak2GreaterThanOrEqualTo(String value) {
            addCriterion("bak2 >=", value, "bak2");
            return (Criteria) this;
        }

        public Criteria andBak2LessThan(String value) {
            addCriterion("bak2 <", value, "bak2");
            return (Criteria) this;
        }

        public Criteria andBak2LessThanOrEqualTo(String value) {
            addCriterion("bak2 <=", value, "bak2");
            return (Criteria) this;
        }

        public Criteria andBak2Like(String value) {
            addCriterion("bak2 like", value, "bak2");
            return (Criteria) this;
        }

        public Criteria andBak2NotLike(String value) {
            addCriterion("bak2 not like", value, "bak2");
            return (Criteria) this;
        }

        public Criteria andBak2In(List<String> values) {
            addCriterion("bak2 in", values, "bak2");
            return (Criteria) this;
        }

        public Criteria andBak2NotIn(List<String> values) {
            addCriterion("bak2 not in", values, "bak2");
            return (Criteria) this;
        }

        public Criteria andBak2Between(String value1, String value2) {
            addCriterion("bak2 between", value1, value2, "bak2");
            return (Criteria) this;
        }

        public Criteria andBak2NotBetween(String value1, String value2) {
            addCriterion("bak2 not between", value1, value2, "bak2");
            return (Criteria) this;
        }

        public Criteria andBak3IsNull() {
            addCriterion("bak3 is null");
            return (Criteria) this;
        }

        public Criteria andBak3IsNotNull() {
            addCriterion("bak3 is not null");
            return (Criteria) this;
        }

        public Criteria andBak3EqualTo(Integer value) {
            addCriterion("bak3 =", value, "bak3");
            return (Criteria) this;
        }

        public Criteria andBak3NotEqualTo(Integer value) {
            addCriterion("bak3 <>", value, "bak3");
            return (Criteria) this;
        }

        public Criteria andBak3GreaterThan(Integer value) {
            addCriterion("bak3 >", value, "bak3");
            return (Criteria) this;
        }

        public Criteria andBak3GreaterThanOrEqualTo(Integer value) {
            addCriterion("bak3 >=", value, "bak3");
            return (Criteria) this;
        }

        public Criteria andBak3LessThan(Integer value) {
            addCriterion("bak3 <", value, "bak3");
            return (Criteria) this;
        }

        public Criteria andBak3LessThanOrEqualTo(Integer value) {
            addCriterion("bak3 <=", value, "bak3");
            return (Criteria) this;
        }

        public Criteria andBak3In(List<Integer> values) {
            addCriterion("bak3 in", values, "bak3");
            return (Criteria) this;
        }

        public Criteria andBak3NotIn(List<Integer> values) {
            addCriterion("bak3 not in", values, "bak3");
            return (Criteria) this;
        }

        public Criteria andBak3Between(Integer value1, Integer value2) {
            addCriterion("bak3 between", value1, value2, "bak3");
            return (Criteria) this;
        }

        public Criteria andBak3NotBetween(Integer value1, Integer value2) {
            addCriterion("bak3 not between", value1, value2, "bak3");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table coach
     *
     * @mbg.generated do_not_delete_during_merge Tue Jun 09 20:15:58 GMT+08:00 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table coach
     *
     * @mbg.generated Tue Jun 09 20:15:58 GMT+08:00 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}